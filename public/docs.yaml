openapi: 3.0.0

info:
  version: 1.0.0
  title: DST Delivery API
  description: Api documentation for the "DST Delivery" project

paths:
  /api/verification/phone/sms:
    post:
      tags:
        - Verification
      summary: Receive a verification SMS code on your phone
      description: Receive a verification SMS code on your phone
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        $ref: '#/components/requestBodies/PhoneRequest'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '422':
          $ref: '#/components/responses/UnprocessableEntityResponse'
  /api/store/customers/register:
    post:
      tags:
        - Customer
      summary: Register a customer by phone number
      description: Register a new customer using SMS code verification
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
      requestBody:
        $ref: '#/components/requestBodies/AuthCustomerRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthCustomerResponse'
        '422':
          $ref: '#/components/responses/UnprocessableEntityResponse'
  /api/store/customers/login:
    post:
      tags:
        - Customer
      summary: Customer authorization by phone number
      description: Authorization of a new customer by SMS with code verification
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
      requestBody:
        $ref: '#/components/requestBodies/AuthCustomerRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthCustomerResponse'
        '422':
          $ref: '#/components/responses/UnprocessableEntityResponse'
        '401':
          $ref: '#/components/responses/IncorrectlyEnteredDataResponse'
  /api/store/customers/logout:
    get:
      tags:
        - Customer
      summary: Customer logout
      description: Customer logout from the system
      parameters:
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/BearerToken'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
  /api/store/categories:
    get:
      tags:
        - Categories
      summary: Get Categories
      description: Get all categories of the current store
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
      responses:
        '200':
          $ref: '#/components/responses/CategoryIndexResponse'
  /api/store/categories/{id}:
    get:
      tags:
        - Categories
      summary: Get Category
      description: Get a category by ID
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          $ref: '#/components/responses/CategoryShowResponse'
  /api/store/products:
    get:
      tags:
        - Products
      summary: Get Products
      description: Get all products of the current store
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Query'
        - $ref: '#/components/parameters/ProductAttributesFilter'
      responses:
        '200':
          $ref: '#/components/responses/ProductIndexResponse'
  /api/store/products/{id}:
    get:
      tags:
        - Products
      summary: Get Product
      description: Get a product by ID
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          $ref: '#/components/responses/ProductShowResponse'
  /api/store/banners:
    get:
      tags:
        - Banners
      summary: Get Banners
      description: Get all banners of the current store
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
      responses:
        '200':
          $ref: '#/components/responses/BannerIndexResponse'
  /api/orders/info:
    get:
      tags:
        - Orders
      summary: Get information for orders
      description: Receive order statuses, payment types and delivery types
      responses:
        '200':
          description: Receive order statuses, payment types and delivery types
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: integer
                        name:
                          type: string
                  payment_types:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: integer
                        name:
                          type: string
                  delivery_types:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: integer
                        name:
                          type: string
  /api/store/orders:
    get:
      tags:
        - Orders
      summary: Get Orders
      description: Get all orders of the customer
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/BearerToken'
        - $ref: '#/components/parameters/OrderStatus'
        - $ref: '#/components/parameters/OrderWithProduct'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
    post:
      tags:
        - Orders
      summary: Create an order
      description: Create a customer order
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/BearerToken'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
  /api/store/orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order by id
      description: Receiving an order by ID, customer order
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/BearerToken'
        - $ref: '#/components/parameters/OrderWithProduct'
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
    post:
      tags:
        - Orders
      summary: Update order
      description: Update order, customer's order
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/BearerToken'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
  /api/store/orders/cancel/{id}:
    get:
      tags:
        - Orders
      summary: Cancel order
      description: Cancel order, customer's order
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/BearerToken'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
  /api/store/orders/items/add:
    post:
      tags:
        - Orders
      summary: Add product to order
      description: Add product to order, customer's order
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/BearerToken'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
  /api/store/orders/items/update:
    post:
      tags:
        - Orders
      summary: Update product on order
      description: Update product on order, customer order
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/BearerToken'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
  /api/store/orders/items/remove/{id}:
    get:
      tags:
        - Orders
      summary: Remove a product from an order
      description: Remove a product from an order, customer order
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StoreUuid'
        - $ref: '#/components/parameters/BearerToken'
      responses:
        '200':
          $ref: '#/components/responses/BlankResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: number
        store_id:
          type: number
        phone:
          type: string
        name:
          type: string
    Category:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
        images:
          type: array
          items:
            type: string
        parent:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
        products:
          type: number
        children:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        preview:
          type: integer
    Product:
      type: object
      properties:
        id:
          type: number
        category:
          type: object
          nullable: true
          properties:
            id:
              type: number
            name:
              type: string
            category:
              type: object
              nullable: true
        name:
          type: string
        description:
          type: string
        is_available:
          type: boolean
        images:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
        selections:
          type: array
          items:
            $ref: '#/components/schemas/ProductSelection'
        preview:
          type: integer
    ProductAttribute:
      type: object
      properties:
        attribute:
          type: string
        name:
          type: string
        value:
          type: string
    ProductSelection:
      type: object
      properties:
        id:
          type: number
        quantity:
          type: number
        price:
          type: number
        is_available:
          type: boolean
        images:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
    Banner:
      type: object
      properties:
        id:
          type: number
        image:
          type: string
        type:
          type: string
        type_value:
          type: string
        start_date:
          type: string
        end_date:
          type: string
  requestBodies:
    AuthCustomerRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              sms_code:
                type: string
                description: SMS code received by the client
              phone_code:
                type: string
                description: Country code of the phone number (e.g., +1 for USA)
                pattern: ^\+\d{1,5}$
                default: '+996'
              phone_number:
                type: number
                description: Phone number without the country code
                default: '700303042'
            required:
              - sms_code
              - phone_code
              - phone_number
    PhoneRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              phone_code:
                type: string
                description: Country code of the phone number (e.g., +1 for USA)
                pattern: ^\+\d{1,5}$
                default: '+996'
              phone_number:
                type: number
                description: Phone number without the country code
                default: '700303042'
            required:
              - phone_code
              - phone_number
  responses:
    BlankResponse:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            type: array
            default: []
    UnauthorizedResponse:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    UnprocessableEntityResponse:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    propertyInRequest:
                      type: array
                      items:
                        type: string
                        default: Error message
                        description: Error message
    IncorrectlyEnteredDataResponse:
      description: Incorrectly entered information
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    AuthCustomerResponse:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Customer'
              token:
                type: string
    CategoryIndexResponse:
      description: Categories
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    CategoryShowResponse:
      description: Category
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Category'
    ProductIndexResponse:
      description: Products
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              links:
                type: object
                properties:
                  first:
                    type: string
                    description: URL of the first page
                  last:
                    type: string
                    description: URL of the last page
                  prev:
                    type: string
                    nullable: true
                    description: URL of the previous page
                  next:
                    type: string
                    nullable: true
                    description: URL of the next page
              meta:
                type: object
                properties:
                  current_page:
                    type: integer
                  from:
                    type: integer
                  last_page:
                    type: integer
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          nullable: true
                        label:
                          type: string
                        active:
                          type: boolean
                  path:
                    type: string
                  per_page:
                    type: integer
                  to:
                    type: integer
                  total:
                    type: integer
    ProductShowResponse:
      description: Product
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Product'
    BannerIndexResponse:
      description: Categories
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Banner'
  parameters:
    AcceptLanguage:
      name: Accept-Language
      in: header
      description: Localization language code (e.g., en, ru)
      required: false
      schema:
        type: string
    StoreUuid:
      name: store-uuid
      in: header
      description: UUID obtained from the admin panel
      required: true
      schema:
        type: string
    BearerToken:
      name: Authorization
      in: header
      description: Authorization Bearer token
      required: true
      schema:
        type: string
        default: 'Bearer TOKEN'
    ID:
      name: id
      in: path
      required: true
      description: ID of the entity to be retrieved
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      required: false
      description: Per page in a query with pagination
      schema:
        type: integer
    Query:
      name: q
      in: query
      required: false
      description: Search parameter
      schema:
        type: string
    ProductAttributesFilter:
      name: attributes
      in: query
      required: false
      description: Product attribute filter
      schema:
        type: array
      example: attributes[color][]=Black&attributes[color][]=Black-White&attributes[color][]=Gray&attributes[insulation]=syntepon&attributes[care]=gentle washing at 30 degrees&attributes[size][]=S
    OrderStatus:
      name: status
      in: query
      required: false
      description: Status of order
      schema:
        type: integer
    OrderWithProduct:
      name: withProduct
      in: query
      required: false
      description: Receiving orders with products
      schema:
        type: integer
        enum:
          - 0
          - 1
